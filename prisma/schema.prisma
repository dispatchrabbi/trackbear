// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model AuditEvent {
  id Int @id @default(autoincrement())

  // the lack of relations here is on purpose
  agentId   Int
  patientId Int?
  goalId    Int?

  eventType String
  auxInfo   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // this should never differ from createdAt
}

model User {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  email       String
  username    String @unique
  displayName String
  password    String
  salt        String

  state String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  leaderboards Leaderboard[]
}

model Project {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int

  title String
  type  String
  state String

  goal      Int?
  startDate String?
  endDate   String?

  visibility String
  starred    Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  updates Update[]
  leaderboards Leaderboard[]
}

model Update {
  id Int @id @default(autoincrement())

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  date  String
  value Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Leaderboard {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int

  title String
  type  String
  state String

  goal      Int?
  startDate String?
  endDate   String?

  projects Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
